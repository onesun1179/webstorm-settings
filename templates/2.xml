<templateSet group="미디어커머스">
  <template name="img" value="import $camel$ from &quot;@img/$SELECTION$.png&quot;" description="import img 구문 생성" toReformat="false" toShortenFQNames="true">
    <variable name="camel" expression="camelCase($SELECTION$)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="getServerSideProps" value="export const getServerSideProps: GetServerSideProps&lt;FindIdCompletedProps&gt; = async ({ req }) =&gt; {&#10;    const { instance } = utilCommon.parsePath('findIdCompleted', req.url);&#10;    return {&#10;        props: {&#10;            userId: instance.userId,&#10;        },&#10;    };&#10;};" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="apipost" value="wrapApi(async (param: {&#10;    }) =&gt; await axios.post&lt;ApiResult&lt;{&#10;    }&gt;&gt;(&quot;&quot;, null, {&#10;        params : param&#10;    }))," toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="apiget" value="wrapApi(&#10;        async (param: {  }) =&gt;&#10;            await axios.get&lt;ApiResult&lt;{}&gt;&gt;('', {&#10;                params: param,&#10;            })&#10;    )," toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>